--creating tables
CREATE TABLE customers (
    customer_id SERIAL PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    email_address VARCHAR(255) UNIQUE NOT NULL,
    country VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) 
DISTRIBUTED BY (customer_id);

--2. Products Table
CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    category VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) 
DISTRIBUTED BY (product_id);

--3. Sales Transactions Table
CREATE TABLE sales_transactions (
    transaction_id SERIAL PRIMARY KEY,
    customer_id INT NOT NULL,
    product_id INT NOT NULL,
    purchase_date DATE NOT NULL,
    quantity_purchased INT NOT NULL CHECK (quantity_purchased > 0),
    total_amount NUMERIC(10, 2), 
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
) 
DISTRIBUTED BY (product_id, customer_id);

--4. Shipping Details Table
CREATE TABLE shipping_details (
    transaction_id INT PRIMARY KEY,
    shipping_date DATE NOT NULL,
    shipping_address VARCHAR(255) NOT NULL,
    city VARCHAR(100) NOT NULL,
    country VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (transaction_id) REFERENCES sales_transactions(transaction_id)
) 
DISTRIBUTED BY (transaction_id);





--total sales amount, 3 month moving average
SELECT
    month,
    total_sales_amount,
    total_transactions,
    AVG(total_sales_amount) OVER (
        ORDER BY month
        ROWS BETWEEN 2 PRECEDING AND CURRENT ROW
    ) AS moving_avg_sales_amount
FROM (
    SELECT
        DATE_TRUNC('month', st.purchase_date) AS month,
        SUM(st.quantity_purchased * p.price) AS total_sales_amount,
        COUNT(st.transaction_id) AS total_transactions
    FROM
        sales_transactions st
    JOIN
        products p ON st.product_id = p.product_id
    GROUP BY
        DATE_TRUNC('month', st.purchase_date)
) AS monthly_sales
ORDER BY
    month;

